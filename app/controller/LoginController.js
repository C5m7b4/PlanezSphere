/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PlanezSphere.controller.LoginController', {
    extend: 'Ext.app.Controller',

    models: [
        'SecurityQuestionModel'
    ],
    stores: [
        'SecurityQuestionStore'
    ],
    views: [
        'ForgotPassword',
        'SecurityQuestion'
    ],

    onLoginButtonClicked: function(button, e, eOpts) {
        var username = Ext.ComponentQuery.query("#txtusername")[0].value;
        var password = Ext.ComponentQuery.query("#txtpassword")[0].value;

        if ( username == undefined || username.length == 0){
            Ext.Msg.alert('Error','Please enter a username');
            return;
        }
        if ( password == undefined || password.length == 0){
            Ext.Msg.alert('Error','Please enter a Password');
            return;
        }
        Ext.Ajax.request({
            method:'POST',
            url:'_data/read_Login.php',
            params:{
                'username':username,
                'password':password
            },
            success:function(response){
                try{
                    console.dir(response);
                    var result = response.responseText;
                    var responseArray = response.responseText.split(",");
                    var message = responseArray[1];
                    var codeArray = message.split(":");
                    var code = codeArray[1].replace('"','');
                    code = code.replace('}','');
                    switch(code)
                    {
                        case "0":
                            //document.location='_includes/debug.php';
                            break;
                        case "1":
                            Ext.Msg.alert('Alert','Internal Error 501, No Username Found');
                            break;
                        case "2":
                            Ext.Msg.alert('Alert','Internal Error 502, No Password found');
                            break;
                        case "3":
                            Ext.Msg.alert('Alert','Internal Error 503, User not found');
                            break;
                        case "4":
                            Ext.Msg.alert('Alert','Internal Error 504, Bad Username');
                            break;
                        case "5":
                            Ext.Msg.alert('Alert','Internal Error 505, Bad Password');
                            break;
                        case "10":
                            //forgot password=1 but security code is fine
                            var fp = Ext.create('PlanezSphere.view.ForgotPassword',{

                            });
                            fp.show();
                            doLogin();
                            break;
                        case "01":
                            //security question needs set but forgot is ok
                            var sq = Ext.create('PlanezSphere.view.SecurityQuestion',{});
                            sq.show();
                            doLogin();
                            break;
                        case "11":
                            //security question needs set and forgot password needs set
                            var fp = Ext.create('PlanezSphere.view.ForgotPassword',{

                            });
                            fp.on('close',function(e){
                                var sq = Ext.create('PlanezSphere.view.SecurityQuestion',{});
                                sq.show();
                                doLogin();
                            });
                            fp.show();

                            break;
                        default:
                            Ext.Msg.alert('Alert','Internal Error 509, Internal Default Error');
                            break;
                    }
                } catch (e){
                    Ext.Msg.alert('Error','The Server returned an unknown error:510');
                }

            }
        });

        function doLogin(){
            console.log("you are now logged into our system");
        }
    },

    onLoginfieldSpecialkey: function(field, e, eOpts) {
        if ( e.getKey() == e.ENTER){
            //lets try to log in
            var loginbutton = Ext.ComponentQuery.query('#btnlogin')[0];
            loginbutton.fireEvent('click',loginbutton);
        }
    },

    onCancelChangePassword_clicked: function(button, e, eOpts) {
        var cp = Ext.getCmp('wdwChangePassword');
        cp.close();
    },

    onSubmitChangePassword_clicked: function(button, e, eOpts) {
        var p1 = Ext.ComponentQuery.query('#changePassword')[0].value;
        var p2 = Ext.ComponentQuery.query('#confirmPassword')[0].value;
        console.dir(p1);

        if ( p1 !== p2){
            Ext.Msg.alert('Error','Your Passwords do not match');
            return;
        }

        Ext.Ajax.request({
            method:'POST',
            url:'_data/update_Login.php',
            params:{
                'password':p1
            },
            success:function(response){
                var parser = Ext.create('PlanezSphere.parse.c5Parse',{

                });
                if ( parser.parseAjax(response) == true){
                    var pw = Ext.getCmp('forgotPassword');
                    pw.close();
                }
            }
        });

    },

    onChangePasswordSpecialKeyUp: function(field, e, eOpts) {
        var button = Ext.ComponentQuery.query('#btnSubmitChangePassword')[0];
        button.fireEvent('click',button);
    },

    onCancelSecurity_click: function(button, e, eOpts) {
        var sqw = Ext.getCmp('securityQuestion');
        sqw.close();
    },

    onSubmitSecurity_click: function(button, e, eOpts) {
        var question = Ext.ComponentQuery.query('#comboSecurity')[0].value;
        console.dir(question);

        var answer = Ext.ComponentQuery.query('#txtSecurity')[0].value;
        console.dir(answer);

        if ( question === undefined ){
            Ext.Msg.alert('Error','Please select a question first');
            return;
        }

        if ( answer === undefined || answer.length === 0){
            Ext.Msg.alert('Error','Please answer the question');
            return;
        }

        //now that all is well, we can send the answer and question off to the server
        Ext.Ajax.request({
            method:'POST',
            url:'_data/update_Security.php',
            params:{
                'question':question,
                'answer':answer
            },
            success:function(response){
                var parser = Ext.create('PlanezSphere.parse.c5Parse',{});
                if (parser.parseAjax(response) === true){
                    var sqw = Ext.getCmp('securityQuestion');
                    sqw.close();
                }
            }
        });
    },

    init: function(application) {
        this.control({
            "#btnlogin": {
                click: this.onLoginButtonClicked
            },
            "#txtpassword": {
                specialkey: this.onLoginfieldSpecialkey
            },
            "#btnCancelChangePassword": {
                click: this.onCancelChangePassword_clicked
            },
            "#btnSubmitChangePassword": {
                click: this.onSubmitChangePassword_clicked
            },
            "#confirmPassword": {
                specialkey: this.onChangePasswordSpecialKeyUp
            },
            "#btnCancelSecurity": {
                click: this.onCancelSecurity_click
            },
            "#btnSubmitSecurity": {
                click: this.onSubmitSecurity_click
            }
        });
    }

});
