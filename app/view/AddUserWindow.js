/*
 * File: app/view/AddUserWindow.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PlanezSphere.view.AddUserWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.container.Container',
        'Ext.form.Label',
        'Ext.form.field.Checkbox',
        'Ext.form.field.ComboBox',
        'Ext.button.Button'
    ],

    height: 388,
    id: 'AddUserWindow',
    width: 558,
    bodyPadding: 10,
    title: 'Add User',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    margin: '10 0 10 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userFirstName',
                            fieldLabel: 'First Name',
                            labelAlign: 'right'
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userLastName',
                            fieldLabel: 'Last Name',
                            labelAlign: 'right'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    margin: '0 0 10 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userUsername',
                            maxWidth: 300,
                            width: 300,
                            fieldLabel: 'Username',
                            labelAlign: 'right',
                            allowBlank: false,
                            minLength: 6,
                            listeners: {
                                change: {
                                    fn: me.onUserUsernameChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'label',
                            flex: 1,
                            margins: '0 10 0 20',
                            cls: 'lblWarning',
                            hidden: true,
                            itemId: 'userUsernameAccepted',
                            maxWidth: 225
                        }
                    ]
                },
                {
                    xtype: 'textfield',
                    itemId: 'userEmail',
                    margin: '0 0 10 0',
                    width: 350,
                    fieldLabel: 'Email',
                    labelAlign: 'right',
                    allowBlank: false,
                    vtype: 'email'
                },
                {
                    xtype: 'container',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'userAddress',
                            margin: '0 0 10 0',
                            minWidth: 400,
                            width: 400,
                            fieldLabel: 'Address',
                            labelAlign: 'right'
                        },
                        {
                            xtype: 'checkboxfield',
                            flex: 1,
                            id: 'checkUserActive',
                            fieldLabel: 'Active',
                            labelAlign: 'right'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    margin: '0 0 10 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userCity',
                            fieldLabel: 'City',
                            labelAlign: 'right'
                        },
                        {
                            xtype: 'combobox',
                            flex: 1,
                            margins: '0 0 0 10',
                            itemId: 'comboUserState',
                            maxWidth: 225,
                            fieldLabel: 'State',
                            labelAlign: 'right',
                            displayField: 'name',
                            queryMode: 'local',
                            store: 'StatesStore',
                            typeAhead: true,
                            valueField: 'abbr'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userZip',
                            fieldLabel: 'Zip code',
                            labelAlign: 'right'
                        },
                        {
                            xtype: 'phonefield',
                            numberformat: '(999)-999-9999',
                            flex: 1,
                            itemId: 'userPhone',
                            fieldLabel: 'Phone',
                            labelAlign: 'right'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    margin: '10 0 0 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userPassword',
                            fieldLabel: 'Password',
                            labelAlign: 'right',
                            inputType: 'password'
                        },
                        {
                            xtype: 'textfield',
                            flex: 1,
                            itemId: 'userConfirmPassword',
                            fieldLabel: 'Confirm',
                            labelAlign: 'right',
                            inputType: 'password'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    margin: '10 0 0 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            flex: 1,
                            itemId: 'userUserLevel',
                            maxWidth: 300,
                            width: 300,
                            fieldLabel: 'User Level',
                            labelAlign: 'right',
                            displayField: 'description',
                            store: 'UserLevelsStore',
                            valueField: 'id'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    margin: '10 0 10 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end',
                        padding: 5
                    },
                    items: [
                        {
                            xtype: 'button',
                            margins: '0 10 0 10',
                            itemId: 'btnCancelAddUser',
                            width: 100,
                            text: 'Cancel'
                        },
                        {
                            xtype: 'button',
                            margins: '0 10 0 10',
                            disabled: true,
                            itemId: 'btnSaveNewUser',
                            width: 100,
                            text: 'Submit'
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onAddUserWindowAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onUserUsernameChange: function(field, newValue, oldValue, eOpts) {
        var btn = Ext.ComponentQuery.query('#btnSaveNewUser')[0];
        btn.setDisabled(true);
        var username = Ext.ComponentQuery.query('#userUsername')[0].value;
        var label = Ext.ComponentQuery.query('#userUsernameAccepted')[0];

        //check for length first
        if ( username.length < 6){
            label.removeCls('lblWarning');
            label.removeCls('lblNowarning');
            label.addCls('lblWarning');
            label.setText('must be at least 6 chars');
            label.setVisible(true);
            return;
        }


        Ext.Ajax.request({
            method:'POST',
            url:'_data/read_ValidateUsername.php',
            params:{
                'username':username
            },
            success:function(response){
                var args = response.responseText.split(':');

                var code = args[1].substring(0,4);
                console.log(code);

                if ( code == 'true'){
                    //this username is not taken
                    label.removeCls('lblWarning');
                    label.addCls('lblNoWarning');
                    label.setText('Username is good!');
                    btn.setDisabled(false);
                    label.setVisible(true);
                } else {
                    //this username is taken
                    btn.setDisabled(true);
                    label.removeCls('lblNoWarning');
                    label.addCls('lblWarning');
                    label.setText('Username is already Taken');
                    label.setVisible(true);
                }

            }
        });
    },

    onAddUserWindowAfterRender: function(component, eOpts) {
        Ext.data.StoreManager.lookup('StatesStore').load();
        Ext.ComponentQuery.query('#userFirstName')[0].focus(true,200);
    }

});