{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "LoginController",
        "models": [
            "SecurityQuestionModel"
        ],
        "stores": [
            "SecurityQuestionStore"
        ],
        "views": [
            "ForgotPassword",
            "SecurityQuestion",
            "PasswordReset"
        ]
    },
    "designerId": "b5637fd6-23dc-46ef-8f49-73dcb8df731a",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnlogin",
                "designer|targetType": "Ext.button.Button",
                "fn": "onLoginButton_Click",
                "implHandler": [
                    "var username = Ext.ComponentQuery.query(\"#txtusername\")[0].value;",
                    "var password = Ext.ComponentQuery.query(\"#txtpassword\")[0].value;",
                    "",
                    "if ( username === undefined || username.length === 0){",
                    "    Ext.Msg.alert('Error','Please enter a username');",
                    "    return;",
                    "}",
                    "if ( password === undefined || password.length === 0){",
                    "    Ext.Msg.alert('Error','Please enter a Password');",
                    "    return;",
                    "}",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/read_Login.php',",
                    "    params:{",
                    "        'username':username,",
                    "        'password':password",
                    "    },",
                    "    success:function(response){",
                    "        try{",
                    "            var decode = Ext.decode(response.responseText);",
                    "            console.dir(decode);",
                    "            var result = response.responseText;",
                    "            var responseArray = response.responseText.split(\",\");",
                    "            var message = responseArray[1];",
                    "            var codeArray = message.split(\":\");",
                    "            var code = codeArray[1].replace('\"','');",
                    "            code = code.replace('}','');",
                    "            switch(code)",
                    "            {",
                    "                case \"0\":",
                    "                    doLogin();",
                    "                    break;",
                    "                case \"1\":",
                    "                    Ext.Msg.alert('Alert','Internal Error 501, No Username Found');",
                    "                    break;",
                    "                case \"2\":",
                    "                    Ext.Msg.alert('Alert','Internal Error 502, No Password found');",
                    "                    break;",
                    "                case \"3\":",
                    "                    Ext.Msg.alert('Alert','Internal Error 503, User not found');",
                    "                    break;",
                    "                case \"4\":",
                    "                    Ext.Msg.alert('Alert','Internal Error 504, Bad Username');",
                    "                    break;",
                    "                case \"5\":",
                    "                    Ext.Msg.alert('Alert','Internal Error 505, Bad Password');",
                    "                    break;",
                    "                case \"10\":",
                    "                    //forgot password=1 but security code is fine",
                    "                    var fp = Ext.create('PlanezSphere.view.ForgotPassword',{",
                    "",
                    "                    });",
                    "                    fp.show();",
                    "                    doLogin();",
                    "                    break;",
                    "                case \"01\":",
                    "                    //security question needs set but forgot is ok",
                    "                    var sq = Ext.create('PlanezSphere.view.SecurityQuestion',{});",
                    "                    sq.show();",
                    "                    doLogin();",
                    "                    break;",
                    "                case \"11\":",
                    "                    //security question needs set and forgot password needs set",
                    "                    var fp1 = Ext.create('PlanezSphere.view.ForgotPassword',{",
                    "",
                    "                    });",
                    "                    fp1.on('close',function(e){",
                    "                        var sq = Ext.create('PlanezSphere.view.SecurityQuestion',{});",
                    "                        sq.show();",
                    "                        doLogin();",
                    "                    });",
                    "                    fp1.show();",
                    "",
                    "                    break;",
                    "                default:",
                    "                    Ext.Msg.alert('Alert','Internal Error 509, Internal Default Error');",
                    "                    break;",
                    "            }",
                    "        } catch (e){",
                    "            Ext.Msg.alert('Error','The Server returned an unknown error:510');",
                    "        }",
                    "",
                    "    }",
                    "});",
                    "",
                    "function doLogin(){",
                    "    var cardLayout = Ext.getCmp('masterCardLayout');",
                    "    console.dir(cardLayout);",
                    "    cardLayout.getLayout().setActiveItem(1);",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "701746c0-84a3-4320-a83f-06615e0a417e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#txtpassword",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onLoginfieldSpecialkey",
                "implHandler": [
                    "if ( e.getKey() == e.ENTER){",
                    "    //lets try to log in",
                    "    var loginbutton = Ext.ComponentQuery.query('#btnlogin')[0];",
                    "    loginbutton.fireEvent('click',loginbutton);",
                    "}"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "5531d32d-190a-47ea-aca0-a593773377a9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnCancelChangePassword",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCancelChangePassword_click",
                "implHandler": [
                    "var cp = Ext.getCmp('wdwChangePassword');",
                    "cp.close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "1811165a-5435-4024-b4cf-58a72dd69040"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSubmitChangePassword",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSubmitChangePassword_click",
                "implHandler": [
                    "var p1 = Ext.ComponentQuery.query('#changePassword')[0].value;",
                    "var p2 = Ext.ComponentQuery.query('#confirmPassword')[0].value;",
                    "",
                    "",
                    "if ( p1 !== p2){",
                    "    Ext.Msg.alert('Error','Your Passwords do not match');",
                    "    return;",
                    "}",
                    "",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/update_Login.php',",
                    "    params:{",
                    "        'password':p1",
                    "    },",
                    "    success:function(response){",
                    "        var parser = Ext.create('PlanezSphere.parse.c5Parse',{",
                    "",
                    "        });",
                    "        if ( parser.parseAjax(response) == true){",
                    "            var pw = Ext.getCmp('forgotPassword');",
                    "            pw.close();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "9d9301a7-6012-4804-99e0-ecb92edaf4f5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#confirmPassword",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onChangePasswordSpecialKeyUp",
                "implHandler": [
                    "var button = Ext.ComponentQuery.query('#btnSubmitChangePassword')[0];",
                    "button.fireEvent('click',button);"
                ],
                "name": "specialkey",
                "scope": "me"
            },
            "designerId": "ad23e0aa-3aba-4cfa-86af-84138cca00d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnCancelSecurity",
                "designer|targetType": "Ext.button.Button",
                "fn": "onCancelSecurity_click",
                "implHandler": [
                    "var sqw = Ext.getCmp('securityQuestion');",
                    "sqw.close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "7bd28dc0-8ec2-4a75-af36-ad9d3ee07d4a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnSubmitSecurity",
                "designer|targetType": "Ext.button.Button",
                "fn": "onSubmitSecurity_click",
                "implHandler": [
                    "var question = Ext.ComponentQuery.query('#comboSecurity')[0].value;",
                    "",
                    "",
                    "var answer = Ext.ComponentQuery.query('#txtSecurity')[0].value;",
                    "",
                    "",
                    "if ( question === undefined ){",
                    "    Ext.Msg.alert('Error','Please select a question first');",
                    "    return;",
                    "}",
                    "",
                    "if ( answer === undefined || answer.length === 0){",
                    "    Ext.Msg.alert('Error','Please answer the question');",
                    "    return;",
                    "}",
                    "",
                    "//now that all is well, we can send the answer and question off to the server",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/update_Security.php',",
                    "    params:{",
                    "        'question':question,",
                    "        'answer':answer",
                    "    },",
                    "    success:function(response){",
                    "        var parser = Ext.create('PlanezSphere.parse.c5Parse',{});",
                    "        if (parser.parseAjax(response) === true){",
                    "            var sqw = Ext.getCmp('securityQuestion');",
                    "            sqw.close();",
                    "        }",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "d0e91e54-213c-47b4-827f-0afc14e8eaf5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnForgotPassword",
                "designer|targetType": "Ext.button.Button",
                "fn": "onForgotPassword_click",
                "implHandler": [
                    "var cid = 'PlanezSphere.view.PasswordReset';",
                    "var shortname = cid.substr(cid.lastIndexOf(\".\")+1,cid.length);",
                    "if(Ext.get(shortname) != null){",
                    "    Ext.get(shortname).destroy();",
                    "}",
                    "",
                    "var fp = Ext.create('PlanezSphere.view.PasswordReset',{",
                    "    height:196",
                    "});",
                    "Ext.getCmp('resetHiddenFields').setVisible(false);",
                    "",
                    "",
                    "var username = Ext.ComponentQuery.query('#txtusername')[0].value;",
                    "if ( username === undefined || username.length === 0){",
                    "    Ext.Msg.alert('Error','Please enter your username before pressing the forgot password button');",
                    "    return;",
                    "}",
                    "",
                    "",
                    "",
                    "//get the security question from the users account to display",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/read_UsersSecurity.php',",
                    "    params:{",
                    "        'username':username",
                    "    },",
                    "    success:function(response){",
                    "",
                    "        var parser = Ext.create('PlanezSphere.parse.c5Parse',{",
                    "",
                    "        });",
                    "        if ( parser.parseAjax(response) === true){",
                    "",
                    "            //now we need to parse out the question and answer out of the json string",
                    "            var args = response.responseText.split(',');",
                    "            //console.dir(args);",
                    "",
                    "            var question = args[6].split(':');",
                    "            var answer = args[5].split(':');",
                    "            var email = args[7].split(':');",
                    "",
                    "",
                    "            question = question[1];",
                    "            question = question.replace(/\\\"/g,\"\");",
                    "",
                    "            answer = answer[1];",
                    "            answer = answer.replace(/\\\"/g,\"\");",
                    "",
                    "            email = email[1];",
                    "            email = email.replace(/\\\"/g,\"\");",
                    "",
                    "            //console.log('q=' + question + \",a=\" + answer + \",e=\" + email);",
                    "",
                    "            fp.insertUsername(username,question,answer,email);",
                    "            fp.show();",
                    "        } else {",
                    "            console.log('false');",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "15174899-846b-4ab7-ae39-2cb35d0e3b21"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnResetCancel",
                "designer|targetType": "Ext.button.Button",
                "fn": "onResetCancel_click",
                "implHandler": [
                    "var rc = Ext.getCmp('passwordReset');",
                    "rc.close();"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "c5a17b3b-6086-49c7-8210-99583733e231"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnResetSubmit",
                "designer|targetType": "Ext.button.Button",
                "fn": "onResetSubmit_click",
                "implHandler": [
                    "var answer = Ext.ComponentQuery.query('#txtResetAnswer')[0].value;",
                    "if ( answer === undefined || answer.length === 0){",
                    "    Ext.Msg.alert('Error','Please answer the Security Question');",
                    "    return;",
                    "}",
                    "",
                    "var email = Ext.ComponentQuery.query('#txtResetEmail')[0].value;",
                    "if ( email === undefined || email.length === 0 ){",
                    "    Ext.Msg.alert('Error','Please enter an Email address');",
                    "    return;",
                    "}",
                    "",
                    "var localanswer = Ext.getCmp('passwordReset').answer;",
                    "console.log(localanswer);",
                    "if ( localanswer != answer){",
                    "    Ext.Msg.alert('Error','Your answer is incorrect');",
                    "    Ext.ComponentQuery.query('#txtResetAnswer')[0].focus(false,200);",
                    "    return;",
                    "}",
                    "",
                    "var localemail = Ext.getCmp('passwordReset').email;",
                    "",
                    "if ( localemail !== email){",
                    "    Ext.Msg.alert('Error','Email does not match Account');",
                    "    Ext.ComponentQuery.query('#txtResetEmail')[0].focus(false,200);",
                    "    return;",
                    "}",
                    "",
                    "",
                    "//now show the new password fields",
                    "var pr = Ext.getCmp('passwordReset');",
                    "pr.height = 320;",
                    "Ext.getCmp('resetHiddenFields').setVisible(true);",
                    "",
                    "console.log('success');",
                    "",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "760b2f8e-f268-4116-84a6-cbc161e481f1"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnResetFinishPassword",
                "designer|targetType": "Ext.button.Button",
                "fn": "onFinishResettingPassword_click",
                "implHandler": [
                    "console.log('we should not be here right now!!!!!');",
                    "var p1 = Ext.ComponentQuery.query('#txtResetPassword')[0].value;",
                    "var p2 = Ext.ComponentQuery.query('#txtResetConfirm')[0].value;",
                    "if ( p1 === undefined || p1.length === 0){",
                    "    Ext.Msg.alert('Error', 'Please enter a password');",
                    "    return;",
                    "}",
                    "",
                    "if ( p2 === undefined || p2.length === 0){",
                    "    Ext.Msg.alert('Error','Please confirm password');",
                    "    return;",
                    "}",
                    "",
                    "if ( p1 !== p2 ){",
                    "    Ext.Msg.alert('Error','Your passwords do not match');",
                    "    return;",
                    "}",
                    "",
                    "var username = Ext.ComponentQuery.query('#lblWelcomeForgottenUser')[0].text;",
                    "var pos = username.indexOf(' ');",
                    "username = username.substring(pos,username.length);",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/update_ResetPassword.php',",
                    "    params:{",
                    "        'username':username,",
                    "        'password':p1",
                    "    },",
                    "    success:function(response){",
                    "        var parser = Ext.create('PlanezSphere.parse.c5Parse',{});",
                    "        if ( parser.parseAjax(response) === true){",
                    "            Ext.getCmp('passwordReset').close();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "e1e05d6c-21f3-4db1-abea-0169539e8e6f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#btnResetPasswordFinished",
                "designer|targetType": "Ext.button.Button",
                "fn": "onResetPasswordFinishedButton_click",
                "implHandler": [
                    "var p1 = Ext.ComponentQuery.query('#txtResetPassword')[0].value;",
                    "var p2 = Ext.ComponentQuery.query('#txtResetConfirm')[0].value;",
                    "if ( p1 === undefined || p1.length === 0){",
                    "    Ext.Msg.alert('Error', 'Please enter a password');",
                    "    return;",
                    "}",
                    "",
                    "if ( p2 === undefined || p2.length === 0){",
                    "    Ext.Msg.alert('Error','Please confirm password');",
                    "    return;",
                    "}",
                    "",
                    "if ( p1 !== p2 ){",
                    "    Ext.Msg.alert('Error','Your passwords do not match');",
                    "    return;",
                    "}",
                    "",
                    "var username = Ext.ComponentQuery.query('#lblWelcomeForgottenUser')[0].text;",
                    "var pos = username.indexOf(' ');",
                    "username = username.substring(pos,username.length);",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    method:'POST',",
                    "    url:'_data/update_ResetPassword.php',",
                    "    params:{",
                    "        'username':username,",
                    "        'password':p1",
                    "    },",
                    "    success:function(response){",
                    "        var parser = Ext.create('PlanezSphere.parse.c5Parse',{});",
                    "        if ( parser.parseAjax(response) === true){",
                    "            Ext.getCmp('passwordReset').close();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "b18f131d-b419-42e5-b986-a13c67adec83"
        }
    ]
}